## Installations & mise en place

Mais avant de dÃ©couvrir les joies de Svelte, il te faudra installer plusieurs choses et te familiariser avec un Ã©diteur de texte et le terminal.

Comme tous les _frameworks_ JavaScript, Svelte repose sur [Node.js](https://nodejs.org/fr/), qui est un environnement d'exÃ©cution JavaScript permettant de faire tourner du code "cÃ´tÃ© serveur", c'est-Ã -dire directement sur ton ordinateur et non pas dans ton navigateur. Node.js te permet Ã©galement d'utiliser des centaines de milliers de modules crÃ©Ã©s par des dÃ©veloppeurs bÃ©nÃ©voles et accessibles via [npm](https://www.npmjs.com/) _(Node Package Manager)_. **TÃ©lÃ©charge Node.js depuis [le site](https://nodejs.org/fr/) et suis les Ã©tapes d'installation indiquÃ©es pour ton systÃ¨me d'exploitation (Windows, MacOS ou Linux)**.

Pour utiliser Svelte, tu auras Ã©galement besoin de savoir comment accÃ©der au terminal sur ton ordinateur. Si tu es sur Windows, tu peux lancer **PowerShell** depuis le menu DÃ©marrer. Sur Mac, le terminal se nomme... **Terminal**, et est accessible depuis le LaunchPad. Si tu es sur Linux, je suppose que tu sais dÃ©jÃ  comment y accÃ©der ğŸ˜œ Tu peux alors vÃ©rifier si **Node.js** et **npm** sont bien installÃ©s en tapant les commandes suivantes (suivies de la touche EntrÃ©e) :

~~~txt
node -v
npm -v
~~~

Le numÃ©ro de version de chaque logiciel devrait s'afficher. Si tu as une erreur Ã  la place, c'est que Node.js ne s'est pas installÃ© correctement.

Souvent, tu auras besoin d'ouvrir une fenÃªtre de terminal dans un dossier donnÃ©. Sur Windows, tu peux faire un clic droit sur un dossier **tout en maintenant enfoncÃ©e la touche Maj**, et tu devrais voir apparaÃ®tre l'option "Ouvrir la fenÃªtre PowerShell ici". Sur Mac, il te faudra aller dans les PrÃ©fÃ©rences, puis Clavier > Raccourcis clavier > Services, et enfin cocher la case "Nouveau terminal au dossier" : ainsi, quand tu feras un clic droit sur un dossier, l'option "Nouveau terminal au dossier" devrait apparaÃ®tre.

Tu auras Ã©galement besoin d'installer **Git**. Sans trop rentrer dans les dÃ©tails, **Git est un logiciel de gestion de versions, qui permet entre autres d'hÃ©berger son code en ligne et de collaborer Ã  plusieurs sur le mÃªme code** - tu peux le voir comme une sorte de Google Drive pour dÃ©veloppeurÂ·seÂ·s.

(i) Tu as peut-Ãªtre dÃ©jÃ  entendu parler de [GitHub](https://github.com/) ou [GitLab](https://about.gitlab.com/), qui sont des exemples de plateformes utilisant Git, et qui hÃ©bergent de nombreux projets open-source (dont Svelte, Linux... et mÃªme Git lui-mÃªme !) D'ailleurs, Git et Linux ont Ã©tÃ© crÃ©Ã©s par la mÃªme personne : Linus Torvalds.

Si tu es sur Windows, tu peux installer Git depuis [ce site](https://git-scm.com/download/win). Sur Mac, Git est certainement dÃ©jÃ  installÃ©, mais dans le cas contraire tu peux l'installer depuis [ce site](https://sourceforge.net/projects/git-osx-installer/files/), ou avec Homebrew en tapant la commande suivante :

~~~txt
brew install git
~~~

Tu peux ensuite vÃ©rifier l'installation :

~~~txt
git -v
~~~

Pour coder, il te faudra Ã©galement installer un Ã©diteur de texte. Un Ã©diteur de texte est un bloc-notes un peu amÃ©liorÃ©, qui te permet d'Ã©crire du code en ayant une coloration syntaxique, de l'autocomplÃ©tion, des indentations automatiques, etc. Il en existe beaucoup, et chacun a ses adeptes, mais j'utilise personnellement [Atom](https://atom.io/), qui est simple d'utilisation et facilement personnalisable. Tu peux Ã©galement utiliser [Visual Studio Code](https://code.visualstudio.com/), qui est Ã©ditÃ© par Microsoft et est aujourd'hui largement utilisÃ©. L'un comme l'autre sont disponibles sur toutes les plateformes, et peuvent Ãªtre installÃ©s via leur site respectif.

Pour avoir une coloration syntaxique correcte de Svelte, il te faudra certainement installer un _plugin_. Si tu as choisi d'utiliser Atom, il te suffit de taper la commande suivante puis de relancer le logiciel :

~~~txt
apm install ide-svelte
~~~

### Mise en place

AprÃ¨s toutes ces installations, tu es presque prÃªtÂ·e Ã  utiliser Svelte ! Ouvre un terminal dans le dossier de ton choix, puis tape les commandes suivantes :

~~~txt
npx degit sveltejs/template svelte-test
cd svelte-test
~~~

La premiÃ¨re commande va tÃ©lÃ©charger le _template_ de base de Svelte dans un sous-dossier nommÃ© `svelte-test`. La seconde permet d'entrer dans ce dossier (`cd` signifie _"change directory"_).

Si tu ouvres ce dossier avec Atom, tu devrais obtenir l'arborescence suivante :

~~~txt
svelte-test
â”œâ”€â”€ public/
	â”œâ”€â”€ favicon.png
    â”œâ”€â”€ global.css
    â”œâ”€â”€ index.html
â”œâ”€â”€ src/
	â”œâ”€â”€ App.svelte
    â”œâ”€â”€ main.js
â”œâ”€â”€ .gitignore
â”œâ”€â”€ README.md
â”œâ”€â”€ package.json
â”œâ”€â”€ rollup.config.js
~~~

Le dossier `public/` contient le HTML et le CSS de base, en quelque sorte la "coquille" dans laquelle Svelte va injecter le code de notre application. Le dossier `src/` contient quant Ã  lui le code source de notre application : l'important est ici `App.svelte`, qui est le point d'entrÃ©e de notre application.

Les autres fichiers ne te concernent pas vraiment, Ã  part `package.json` qui est trÃ¨s important : il contient notamment la liste de toutes les dÃ©pendances de l'application, c'est-Ã -dire les modules issus de npm dont Svelte et ton application ont besoin pour fonctionner.

Si tu exÃ©cutes la commande suivante...

~~~txt
npm install
~~~

... tu verras qu'un nouveau dossier `node_modules` s'est crÃ©Ã©. Il contient toutes les dÃ©pendances spÃ©cifiÃ©es dans `package.json`, et que tu viens d'installer avec la commande prÃ©cÃ©dente. Le fichier `package.json` permet donc de partager du code sans avoir besoin de se trimbaler un dossier `node_modules` [souvent trÃ¨s lourd](https://indexandmain.com/images/uploads/node_modules_meme.png).

Pour lancer le serveur de dÃ©veloppement, il te suffit de lancer la commande suivante :

~~~txt
npm run dev
~~~

Ton application est maintenant visible Ã  l'adresse [`http://localhost:5000`](http://localhost:5000). Attention, il s'agit d'une adresse locale, qui ne fonctionne que sur ton ordinateur et tant que le terminal est ouvert. Si tu souhaites publier ton application, il faudra auparavant la construire puis la dÃ©ployer (on verra tout Ã§a plus tard).

***
